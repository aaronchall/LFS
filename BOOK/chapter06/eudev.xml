<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-eudev" role="wrap">
  <?dbhtml filename="eudev.html"?>

  <sect1info condition="script">
    <productname>eudev</productname>
    <productnumber>&eudev-version;</productnumber>
    <address>&eudev-url;</address>
  </sect1info>

  <title>Eudev-&eudev-version;</title>

  <indexterm zone="ch-system-eudev">
    <primary sortas="a-Eudev">Eudev</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Eudev package contains programs for dynamic creation of device
    nodes.</para> 

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&eudev-ch6-sbu;</seg>
        <seg>&eudev-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Eudev</title>

    <para>First, clean up a few warnings and fix a test script:</para>

<screen><userinput remap="pre">sed    -i '/struct ucred/i struct ucred;' src/libudev/util.h
sed -r -i 's|/usr(/bin/test)|\1|'         test/udev-test.pl</userinput></screen>

<para>Prepare Eudev for compilation:</para>

<screen><userinput remap="configure">BLKID_CFLAGS=-I/tools/include       \
BLKID_LIBS='-L/tools/lib -lblkid'   \
./configure --prefix=/usr           \
            --bindir=/sbin          \
            --sbindir=/sbin         \
            --libdir=/usr/lib       \
            --sysconfdir=/etc       \
            --libexecdir=/lib       \
            --with-rootprefix=      \
            --with-rootlibdir=/lib  \
            --enable-split-usr      \
            --enable-libkmod        \
            --enable-rule_generator \
            --enable-keymap         \
            --disable-introspection \
            --disable-gudev         \
            --disable-gtk-doc-html  \
            --with-firmware-path=/lib/firmware </userinput></screen>

<para>Compile the package:</para>

<screen><userinput remap="make">make</userinput></screen>

<para>Create some directories now that are needed for tests, but
will also be used as a part of installation:</para>

<screen><userinput remap="install">mkdir -pv /lib/{firmware,udev/devices/pts}
mkdir -pv /lib/udev/rules.d
mkdir -pv /etc/udev/rules.d</userinput></screen>

<para>To test the results, run issue:</para>

<screen><userinput remap="test">make check</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make install</userinput></screen>

<para>Now, install the man pages:</para>

<screen><userinput remap="install">tar -xvf ../eudev-&eudev-version;-manpages.tar.bz2 -C /usr/share</userinput></screen>

    <para>Finally, create some custom rules that are not covered as a part of the
    defaults:</para>

<screen><userinput remap="install">cat &gt; /etc/udev/rules.d/55-lfs.rules &lt;&lt; "EOF"
# /etc/udev/rules.d/55-lfs.rules: Rule definitions for LFS.

# Core kernel devices

# This causes the system clock to be set as soon as /dev/rtc becomes available.
SUBSYSTEM=="rtc", ACTION=="add", MODE="0644", RUN+="/etc/rc.d/init.d/setclock start"
KERNEL=="rtc", ACTION=="add", MODE="0644", RUN+="/etc/rc.d/init.d/setclock start"

# Comms devices

KERNEL=="ippp[0-9]*",       GROUP="dialout"
KERNEL=="isdn[0-9]*",       GROUP="dialout"
KERNEL=="isdnctrl[0-9]*",   GROUP="dialout"
KERNEL=="dcbri[0-9]*",      GROUP="dialout"
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-eudev" role="content">
    <title>Contents of Eudev</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>
      <segtitle>Installed directories</segtitle>

      <seglistitem>
        <seg><!-- These are in /lib/udev and not to be called by the user:
         accelerometer, ata_id, cdrom_id, collect, mtd_probe,
         scsi_id, v4l_id,--> udevadm and udevd</seg>

        <seg>libudev.so</seg>

        <seg>/etc/udev, /lib/udev, and /lib/firmware</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
<!--
      <varlistentry id="ata_id">
        <term><command>ata_id</command></term>
        <listitem>
          <para>Provides Udev with a unique string and
          additional information (uuid, label) for an ATA drive</para>
          <indexterm zone="ch-system-eudev ata_id">
            <primary sortas="b-ata_id">ata_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cdrom_id">
        <term><command>cdrom_id</command></term>
        <listitem>
          <para>Provides Udev with the capabilities of a
          CD-ROM or DVD-ROM drive</para>
          <indexterm zone="ch-system-eudev cdrom_id">
            <primary sortas="b-cdrom_id">cdrom_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="collect">
        <term><command>collect</command></term>
        <listitem>
          <para>Given an ID for the current uevent and a list of
          IDs (for all target uevents), registers the current ID
          and indicates whether all target IDs have been registered</para>
          <indexterm zone="ch-system-eudev collect">
            <primary sortas="b-collect">collect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="scsi_id">
        <term><command>scsi_id</command></term>
        <listitem>
          <para>Provides Udev with a unique SCSI identifier
          based on the data returned from sending a SCSI INQUIRY command to
          the specified device</para>
          <indexterm zone="ch-system-eudev scsi_id">
            <primary sortas="b-scsi_id">scsi_id</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->
      <varlistentry id="udevadm">
        <term><command>udevadm</command></term>
        <listitem>
          <para>Generic udev administration tool: controls the udevd daemon,
          provides info from the Udev database, monitors uevents, waits for
          uevents to finish, tests Udev configuration, and triggers uevents
          for a given device</para>
          <indexterm zone="ch-system-eudev udevadm">
            <primary sortas="b-udevadm">udevadm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="udevd">
        <term><command>udevd</command></term>
        <listitem>
          <para>A daemon that listens for uevents on the netlink socket,
          creates devices and runs the configured external programs in
          response to these uevents</para>
          <indexterm zone="ch-system-eudev udevd">
            <primary sortas="b-udevd">udevd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libudev">
        <term><filename class="libraryfile">libudev</filename></term>
        <listitem>
          <para>A library interface to udev device information</para>
          <indexterm zone="ch-system-eudev libudev">
            <primary sortas="c-libudev">libudev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="etc-udev">
        <term><filename class="directory">/etc/udev</filename></term>
        <listitem>
          <para>Contains Udev configuration files,
          device permissions, and rules for device naming</para>
          <indexterm zone="ch-system-eudev etc-udev">
            <primary sortas="e-/etc/udev">/etc/udev</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
